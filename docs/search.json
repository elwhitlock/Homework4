[
  {
    "objectID": "pages/combining.html",
    "href": "pages/combining.html",
    "title": "Combining Excel and Delimited Data",
    "section": "",
    "text": "Answers go here!",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/concepts.html",
    "href": "pages/concepts.html",
    "title": "Conceptual Questions",
    "section": "",
    "text": "We could do “../MyData.csv”\n\n\n\nBenefits include:\n\nEasy integration with version control\nEnhanced reproducibility\nA more collaborative work environment\n\n\n\n\nGit is the actual system that allows us to keep track of our code while GitHub is the platform that hosts peoples codes.\n\n\n\nTibbles do not coerce down to a vector when you subset to only one column using [. Tibbles are also easier to use with chain operators.\n\n\n\nWrite as\n“as_tibble(iris) |&gt;\nselect(starts_with(“Petal”), Species) |&gt;\nfilter(Petal.Length &lt; 1.55) |&gt;\narrange(Species)”",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Homework 4",
    "section": "",
    "text": "An example pages site with multiple pages and a table of contents.\nThis could be a landing page for the site. Feel free to put whatever here!",
    "crumbs": [
      "Home",
      "Homework 4"
    ]
  },
  {
    "objectID": "pages/read_delimited.html",
    "href": "pages/read_delimited.html",
    "title": "Reading Delimited Data",
    "section": "",
    "text": "Packages\n\nlibrary(readr)\n\nWarning: package 'readr' was built under R version 4.4.3\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.4.2\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#q1",
    "href": "pages/combining.html#q1",
    "title": "Combining Excel and Delimited Data",
    "section": "Q1",
    "text": "Q1\nRead in excel data, note we want the first sheet.\n\nwhite_wine_data &lt;- read_excel(\"white-wine.xlsx\",\n                              sheet = excel_sheets(\"white-wine.xlsx\")[1])\n\nwhite_wine_data\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#q2-and-q3",
    "href": "pages/combining.html#q2-and-q3",
    "title": "Combining Excel and Delimited Data",
    "section": "Q2 and Q3",
    "text": "Q2 and Q3\nRead in the second sheet, use it to overwrite the column names of the white wine data.\n\nvar_names &lt;- read_excel(\"white-wine.xlsx\",\n                              sheet = excel_sheets(\"white-wine.xlsx\")[2])\n\nvar_names=var_names[[1]]\n\ncolnames(white_wine_data) &lt;- var_names",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#q3",
    "href": "pages/combining.html#q3",
    "title": "Combining Excel and Delimited Data",
    "section": "Q3",
    "text": "Q3\nThen add column to mark all wines ‘white’.\n\nwhite_wine_data$type &lt;- \"White\"",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#q4",
    "href": "pages/combining.html#q4",
    "title": "Combining Excel and Delimited Data",
    "section": "Q4",
    "text": "Q4\nRead in the data. Fix column names. Create column with wine type.\n\nred_wine_data &lt;- read_delim(\"red-wine.csv\",\n                            delim = \";\")\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncolnames(red_wine_data) &lt;- var_names\n\nred_wine_data$type &lt;- \"Red\"",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#q5",
    "href": "pages/combining.html#q5",
    "title": "Combining Excel and Delimited Data",
    "section": "Q5",
    "text": "Q5\nCombine the two!\n\nwine_data &lt;- bind_rows(white_wine_data, red_wine_data)",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#q6-q7-q8-and-q9",
    "href": "pages/combining.html#q6-q7-q8-and-q9",
    "title": "Combining Excel and Delimited Data",
    "section": "Q6, Q7, Q8, and Q9",
    "text": "Q6, Q7, Q8, and Q9\nWe will make big chain to do the following: Look at high-quality, reasonable alcohol value wines. Sort from high to low quality. Show only variables that contain ‘acid’ the alcohol variable, type variable and quality variable. Group by quality variable.\n\nwine_data |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  arrange(desc(quality)) |&gt;\n  select(contains(\"acid\"), alcohol, type, quality) |&gt;\n  group_by(quality) |&gt;\n  mutate(alc_mean=mean(alcohol),alc_sd=sd(alcohol))\n\n# A tibble: 1,206 × 8\n# Groups:   quality [3]\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality alc_mean\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n 1            91             0.27        0.45     104 White       9    122. \n 2            66             0.36        0.29     124 White       9    122. \n 3            74             0.24        0.36     125 White       9    122. \n 4            69             0.36        0.34     127 White       9    122. \n 5            71             0.26        0.49     129 White       9    122. \n 6            62             0.66        0.48     128 White       8     94.1\n 7            62             0.66        0.48     128 White       8     94.1\n 8            68             0.26        0.42     105 White       8     94.1\n 9            67             0.23        0.31     107 White       8     94.1\n10            67             0.23        0.31     107 White       8     94.1\n# ℹ 1,196 more rows\n# ℹ 1 more variable: alc_sd &lt;dbl&gt;",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/concepts.html#q1",
    "href": "pages/concepts.html#q1",
    "title": "Conceptual Questions",
    "section": "",
    "text": "We could do “../MyData.csv”",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "pages/concepts.html#q2",
    "href": "pages/concepts.html#q2",
    "title": "Conceptual Questions",
    "section": "",
    "text": "Benefits include:\n\nEasy integration with version control\nEnhanced reproducibility\nA more collaborative work environment",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "pages/concepts.html#q3",
    "href": "pages/concepts.html#q3",
    "title": "Conceptual Questions",
    "section": "",
    "text": "Git is the actual system that allows us to keep track of our code while GitHub is the platform that hosts peoples codes.",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "pages/concepts.html#q4",
    "href": "pages/concepts.html#q4",
    "title": "Conceptual Questions",
    "section": "",
    "text": "Tibbles do not coerce down to a vector when you subset to only one column using [. Tibbles are also easier to use with chain operators.",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "pages/concepts.html#q5",
    "href": "pages/concepts.html#q5",
    "title": "Conceptual Questions",
    "section": "",
    "text": "Write as\n“as_tibble(iris) |&gt;\nselect(starts_with(“Petal”), Species) |&gt;\nfilter(Petal.Length &lt; 1.55) |&gt;\narrange(Species)”",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "pages/read_delimited.html#q1",
    "href": "pages/read_delimited.html#q1",
    "title": "Reading Delimited Data",
    "section": "Q1",
    "text": "Q1\nRead in Data via url, delimiter is comma.\n\nglass_data &lt;- read_csv(\"https://www4.stat.ncsu.edu/online/datasets/glass.data\",\n                        col_names= c(\"Id\",\"RI\",\"Na\",\"Mg\",\"Al\",\"Si\",\"K\",\"Ca\", \"Ba\", \"Fe\",\"Type_of_Glass\"))\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Type_of_Glass\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglass_data\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_Glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n# ℹ 204 more rows",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "pages/read_delimited.html#q2-and-q3",
    "href": "pages/read_delimited.html#q2-and-q3",
    "title": "Reading Delimited Data",
    "section": "Q2 and Q3",
    "text": "Q2 and Q3\nMutate Type_of_Glass” to go from numeric to descriptive via ifelse(). Only include observations wehre Fe &lt; 0.2 and Type_of_Glass is ‘tableware’ or ‘headlamps’.\n\nglass_data |&gt;\n  mutate(Type_of_Glass= ifelse(Type_of_Glass==1,\n                        \"building_windows_float_processed\",\n                         ifelse(Type_of_Glass==2, \n                        \"building_windows_non_float_processed\",\n                         ifelse(Type_of_Glass==3,\n                        \"vehicle_windows_float_processed\",\n                         ifelse(Type_of_Glass==4,\n                         \"vehicle_windows_non_float_processed\",\n                         ifelse(Type_of_Glass==5,\n                         \"containers\",\n                         ifelse(Type_of_Glass==6,\n                          \"tableware\",\n                         ifelse(Type_of_Glass==7,\n                         \"headlamps\",\"other\")))))))) |&gt;\n  filter(Fe&lt;0.2,Type_of_Glass %in% c(\"tableware\", \"headlamps\"))\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_Glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware    \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware    \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware    \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware    \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware    \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware    \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware    \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware    \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware    \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps    \n# ℹ 28 more rows",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "pages/read_delimited.html#q1-1",
    "href": "pages/read_delimited.html#q1-1",
    "title": "Reading Delimited Data",
    "section": "Q1",
    "text": "Q1\nRead in data via url, double space delimited.\n\nyeast_data &lt;- read_table(\"https://www4.stat.ncsu.edu/online/datasets/yeast.data\",\n                        col_names= c(\"seq_name\",\"mcg\",\"gvh\",\"alm\",\"mit\",\"erl\",\"pox\",\"vac\",\"nuc\",\"class\"))\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  seq_name = col_character(),\n  mcg = col_double(),\n  gvh = col_double(),\n  alm = col_double(),\n  mit = col_double(),\n  erl = col_double(),\n  pox = col_double(),\n  vac = col_double(),\n  nuc = col_double(),\n  class = col_character()\n)\n\nyeast_data\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "pages/read_delimited.html#q2-and-q3-1",
    "href": "pages/read_delimited.html#q2-and-q3-1",
    "title": "Reading Delimited Data",
    "section": "Q2 and Q3",
    "text": "Q2 and Q3\nRemoving seq_name and nuc columns. Add columns for the mean and median of each numeric variable for each class grouping.\n\nyeast_data |&gt;\n  select(mcg:vac,class) |&gt;\n  group_by(class) |&gt;\n  mutate(across(where(is.numeric),list(mean = mean, median = median), .names = \"{.col}_{.fn}\"))\n\n# A tibble: 1,484 × 22\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mcg_mean mcg_median gvh_mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.521       0.51    0.533\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.521       0.51    0.533\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.521       0.51    0.533\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.452       0.45    0.456\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.521       0.51    0.533\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.481       0.48    0.470\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.521       0.51    0.533\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.452       0.45    0.456\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.521       0.51    0.533\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.481       0.48    0.470\n# ℹ 1,474 more rows\n# ℹ 11 more variables: gvh_median &lt;dbl&gt;, alm_mean &lt;dbl&gt;, alm_median &lt;dbl&gt;,\n#   mit_mean &lt;dbl&gt;, mit_median &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  }
]